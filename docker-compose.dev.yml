version: '3'

services:
  db:
    container_name: db
    image: postgres:10.4
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_pass
      POSTGRES_DB: db
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      - PORT=8050
      - TYPEORM_URL=postgres://dev_user:dev_pass@db:5432/db
      - TYPEORM_CONNECTION=postgres
      - TYPEORM_LOGGING=true
      - TYPEORM_ENTITIES=./dist/entities/*.js
      - TYPEORM_MIGRATIONS=./dist/migrations/*.js
      - TYPEORM_MIGRATIONS_DIR=./src/migrations
      - PRIVATE_KEY=devprivatesigningkey
      - FACEBOOK_APP_ACCESS_TOKEN=457784034692995|25888d395a8b367feb7a079efaf5fca0
    volumes:
      - ./api/src:/app/src
      - ./api/dist:/app/dist
      - /app/node_modules
    ports:
      - "8050:8050"
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:8050 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  front:
    container_name: front
    build:
      context: ./front
      dockerfile: Dockerfile.dev
      args:
        - port=3000
    volumes:
      - ./front:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - "api"
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    depends_on:
      - "db"

volumes:
  postgres:
  pgadmin:
